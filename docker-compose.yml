version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=dev-secret-key-change-in-production
      - NEXT_PUBLIC_API_URL=http://backend:8080
    depends_on:
      - backend
    networks:
      - arbmonitor-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATABASE_URL=jdbc:postgresql://postgres:5432/arbmonitor
      - DATABASE_USERNAME=arbmonitor
      - DATABASE_PASSWORD=arbmonitor123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APIFY_TOKEN=${APIFY_TOKEN}
      - JWT_SECRET=your-jwt-secret-key-here
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
    depends_on:
      - postgres
      - redis
    volumes:
      - backend-media:/app/media
    networks:
      - arbmonitor-network

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=arbmonitor
      - POSTGRES_USER=arbmonitor
      - POSTGRES_PASSWORD=arbmonitor123
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - arbmonitor-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - arbmonitor-network

volumes:
  postgres-data:
  redis-data:
  backend-media:

networks:
  arbmonitor-network:
    driver: bridge
